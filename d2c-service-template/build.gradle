plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.sonarqube" version "3.0"
	id 'jacoco'
}

group = 'com.d2c.template'
version = '0.0.1-SNAPSHOT'
description = 'd2c-service-template'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

sonarqube {
	properties {
		property "sonar.sourceEncoding", "UTF-8"
		property "sonar.jacoco.coverage.reportPaths", "$buildDir/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.junit.reportsPaths", "$buildDir/test-results/"
	}
}

ext {
	set('springCloudVersion', "2022.0.1")
}

dependencies {
	implementation 'org.springframework:spring-core'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'io.springfox:springfox-swagger-ui:2.6.1'
	implementation 'io.springfox:springfox-swagger2:2.6.1'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-root:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	runtimeOnly 'com.mysql:mysql-connector-j'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

def activeProfile = 'dev'
bootRun {
	jvmArgs = ["-Dspring.output.ansi.enabled=ALWAYS"];
	systemProperty "spring.profiles.active", activeProfile
}